template st.optim.definitions.implementations.Component
  implements st.optim.definitions.implementations.ComponentDefinition {

st.interfaces.IDLDefinition idl2c = st.interfaces.IDL2C ; 

$${

  
isClient ::= [ "client" : "true" ]
isServer ::= [ "server" : "true" ]

// -----------------------------------------------------------------------------
// Implementation of the ComponentDefinition interface
// -----------------------------------------------------------------------------

ComponentDefinition(definition, instance, interfaceDefinitions) ::= <<
/* Generated file: <definition.name;format="nameToPath">.inc */
#define __COMPONENT_IN_<definition.name;format="toUpperCName">
#include "<definition.name;format="nameToPath">.adl.h"

<ServerMethodsDeclaration(definition=definition, interfaceDefinitions=interfaceDefinitions)>

<! SSZ : BEGIN MODIFICATION !>
<OptimizedMethodsDeclaration(definition=definition, instance=instance, interfaceDefinitions=interfaceDefinitions)>
<! SSZ : END MODIFICATION !>

>>

// -----------------------------------------------------------------------------
// Internal templates
// -----------------------------------------------------------------------------

// -----------------------------------------------------------------------------
// Server method declaration

ServerMethodsDeclaration(definition, interfaceDefinitions) ::= <<
/* Start declaration of server methods */
<definition.interfaces:ServerMethodDecls(definition=definition, interfaceDefinitions=interfaceDefinitions, itf=it); separator="\n">
<if (definition.astNodeTypes.("internalInterface"))>
<definition.internalInterfaces:ServerMethodDecls(definition=definition, interfaceDefinitions=interfaceDefinitions, itf=it); separator="\n">
<endif>
/* End declaration of server methods */
>>

ServerMethodDecls(definition, interfaceDefinitions, itf) ::= <<
<if (isServer.(itf.role))>
<if (itf.numberOfElement)>
<itf.astDecorations.("collectionIndexes"):ServerMethodDecls1(definition=definition, interfaceDefinitions=interfaceDefinitions, itf=itf, index=it);separator="\n">
<else>
<ServerMethodDecls1(definition=definition, interfaceDefinitions=interfaceDefinitions, itf=itf)>
<endif>
<endif>
>>

ServerMethodDecls1(definition, interfaceDefinitions, itf, index) ::= <<
<if (definition.astDecorations.("is-singleton"))>
<interfaceDefinitions.(itf.signature).methods:SingletonServerMethodDecl(definition=definition, itf=itf, index=index, method=it);separator="\n">
<else>
<interfaceDefinitions.(itf.signature).methods:MultiServerMethodDecl(definition=definition, itf=itf, index=index, method=it);separator="\n">
<endif>
>>

MultiServerMethodDecl(definition, itf, index, method) ::= <<
<(idl2c.methodDef)(method=method,methodName=METHODName(itfName=itf.name, index=index, methodName=method.name), withThisPtr="typed")>;
>>

SingletonServerMethodDecl(definition, itf, index, method) ::= <<
<(idl2c.methodDef)(method=method,methodName=METHODName(itfName=itf.name, index=index, methodName=method.name), withThisPtr="false")>;
>>

METHODName(itfName, index, methodName) ::= <<
<if (index)>
INTERFACE_COLLECTION_METHOD(<itfName>, <index>, <methodName>)
<else>
INTERFACE_METHOD(<itfName>, <methodName>)
<endif>
>>

// -----------------------------------------------------------------------------
// Client method declaration

OptimizedMethodsDeclaration(definition, instance, interfaceDefinitions) ::= <<
/* Start declaration of client methods : Used by optimized calls */
<definition.interfaces:OptimizedMethodDecls(definition=definition, instance=instance, interfaceDefinitions=interfaceDefinitions, itf=it); separator="\n">
<if (definition.astNodeTypes.("internalInterface"))>
<definition.internalInterfaces:OptimizedMethodDecls(definition=definition, instance=instance, interfaceDefinitions=interfaceDefinitions, itf=it, isInternal="true"); separator="\n">
<endif>
<SingleStaticCallPointerMethodDecls(definition=definition, isInternal="false"); separator="\n">
/* End declaration of client methods */
>>

OptimizedMethodDecls(definition, instance, interfaceDefinitions, itf, isInternal) ::= <<
<if (isClient.(itf.role))>
<OptimizedMethodDecls1(definition=definition, instance=instance, interfaceDefinitions=interfaceDefinitions, itf=itf, isInternal=isInternal)>
<endif>
>>

OptimizedMethodDecls1(definition, instance, interfaceDefinitions, itf, index, isInternal) ::= <<
<if (definition.astDecorations.("is-singleton"))>
  <if (itf.numberOfElement)>
    <if (definition.astDecorations.("parent-has-static-bindings"))>
      <if (itf.astDecorations.("interfaceDefinition"))>
<itf.astDecorations.("interfaceDefinition").methods:{<AddSBItfCollectionValue(definition=definition, instance=instance, itf=itf, method=it, isInternal=isInternal)>}; separator="\n">
      <endif>
    <endif>
  <else>
<interfaceDefinitions.(itf.signature).methods:SingletonOptimizedMethodDecl(definition=definition, instance=instance, itf=itf, method=it, isInternal=isInternal);separator="\n">    
  <endif>
<endif>
<if (itf.astDecorations.("static-definition-binding-target-itf"))>
  <! Here it doesnt matter if the caller is singleton and static or not !>
  <interfaceDefinitions.(itf.signature).methods:StaticDefinitionBindingOptimizedMethodDecl(definition=definition, instance=instance, itf=itf, method=it, isInternal=isInternal);separator="\n">
<endif>
<if (itf.astDecorations.("is-inline"))>
/* Start inlined methods declaration for def: <definition.name> itf:<itf.name> */
  <if (itf.astDecorations.("inline-methods-bodies"))>
  /* inline-methods-bodies found */
  <itf.astDecorations.("inline-methods-bodies"):FullWriteInlinedMethods(text=it);separator="\n">
  <else>
  /* SSZ Dirty Debug: did not find inline-methods-bodies on the node */
  <endif>
/* End inlined methods declaration */
<endif>
>>

FullWriteInlinedMethods(text) ::= <<
<text>
>>

SingleStaticCallPointerMethodDecls(definition, isInternal) ::= <<
<if (definition.astDecorations.("single-static-call-ptr-targetinstance"))>
  // OptimizedMethodDecls1
  <definition.astDecorations.("single-static-call-ptr-targetitfdef").methods:SingleStaticCallPointerOptimizedMethodDecl(definition=definition, method=it);separator="\n">
<endif>
>>

SingletonOptimizedMethodDecl(definition, instance, itf, index, method, isInternal) ::= <<
<if (!(instance.decorations.("binding-descriptors").(StaticBindingItfName(itfName=itf.name, isInternal=isInternal)).binding.astDecorations.("self-binding-detected")))>
<if (instance.decorations.("binding-descriptors").(StaticBindingItfName(itfName=itf.name, isInternal=isInternal)).binding.astDecorations.("is-static"))>
<(idl2c.methodDef)(method=method,methodName=OptimizationMETHODName(instance=instance, itf=itf, methodName=method.name, isInternal=isInternal), withThisPtr="false")>;
<elseif (instance.decorations.("binding-descriptors").(StaticBindingItfName(itfName=itf.name)).binding.astDecorations.("is-static"))>
<(idl2c.methodDef)(method=method,methodName=OptimizationMETHODName(instance=instance, itf=itf, methodName=method.name), withThisPtr="false")>;
<endif>
<endif>
>>

StaticDefinitionBindingOptimizedMethodDecl(definition, instance, itf, index, method, isInternal) ::= <<
<(idl2c.methodDef)(method=method,methodName=StaticDefinitionBindingOptimizedMethodName(instance=instance, itfName=itf.name, methodName=method.name), withThisPtr="true")>;
>>

StaticDefinitionBindingOptimizedMethodName(instance, itfName, methodName, isInternal) ::= <<
<if (itf.astDecorations.("static-definition-binding-target-itf"))>
<itf.astDecorations.("static-definition-binding-target-itf")>_<methodName> 
<endif>
>>

SingleStaticCallPointerOptimizedMethodDecl(definition, method) ::= <<
<(idl2c.methodDef)(method=method,methodName=SingleStaticCallPointerOptimizedMethodName(definition=definition, methodName=method.name), withThisPtr="true")>;
>>

SingleStaticCallPointerOptimizedMethodName(definition, methodName) ::= <<
<definition.astDecorations.("single-static-call-ptr-targetinstance")>_<methodName> 
>>

StaticBindingItfName(itfName, index, isInternal) ::= "<if (isInternal)>INTERNAL_<endif><itfName><if (index)>_<index><endif>"

OptimizationMETHODName(instance, itf, index, methodName, isInternal) ::= <<
<if (isInternal)>
__component_<instance.decorations.("binding-descriptors").(StaticBindingItfName(itfName=itf.name, isInternal=isInternal)).serverComponent.definition.name; format="toCName">_<instance.decorations.("binding-descriptors").(StaticBindingItfName(itfName=itf.name, isInternal=isInternal)).binding.toInterface>_<if (instance.decorations.("binding-descriptors").(StaticBindingItfName(itfName=itf.name)).binding.toInterfaceNumber)><instance.decorations.("binding-descriptors").(StaticBindingItfName(itfName=itf.name)).binding.toInterfaceNumber>_<endif><methodName>
<else>
__component_<instance.decorations.("binding-descriptors").(StaticBindingItfName(itfName=itf.name)).serverComponent.definition.name; format="toCName">_<instance.decorations.("binding-descriptors").(StaticBindingItfName(itfName=itf.name)).binding.toInterface>_<if (instance.decorations.("binding-descriptors").(StaticBindingItfName(itfName=itf.name)).binding.toInterfaceNumber)><instance.decorations.("binding-descriptors").(StaticBindingItfName(itfName=itf.name)).binding.toInterfaceNumber>_<endif><methodName>
<endif>
>>

// Start StaticBindings Collection optimization
AddSBItfCollectionValue(definition, instance, itf, method, isInternal) ::= <<
<itf.astDecorations.("collectionIndexes"):{<AddSBCollectionTargetFunctionPrototype1(definition=definition, instance=instance, itf=itf, index=it, isInternal=isInternal, methName=method.name)>}; separator="\n">

>>

AddSBBindingValue(definition, instance, itf, index, isInternal, methName) ::= <<
<if (instance.decorations.("binding-descriptors").(StaticBindingItfName(itfName=itf.name, index=index, isInternal=isInternal)))>
<AddFuncPtrValue(definition=definition, instance=instance, itf=itf, index=index, isInternal=isInternal, bindingDesc=instance.decorations.("binding-descriptors").(StaticBindingItfName(itfName=itf.name, index=index, isInternal=isInternal)), methName=methName)>
<else>
0
<endif>
>>

AddFuncPtrValue(definition, instance, itf, index, isInternal, bindingDesc, methName) ::= <<
<if (bindingDesc.binding)>
__component_<bindingDesc.serverComponent.definition.name; format="toCName">_<bindingDesc.binding.toInterface><if (bindingDesc.binding.toInterfaceNumber)>_<bindingDesc.binding.toInterfaceNumber><endif>_<methName>
<else>
0
<endif>
>>

AddSBCollectionTargetFunctionPrototype1(definition, instance, itf, index, isInternal, methName) ::= <<
<if (instance.decorations.("binding-descriptors").(StaticBindingItfName(itfName=itf.name, index=index, isInternal=isInternal)))>
<AddSBCollectionTargetFunctionPrototype2(definition=definition, instance=instance, itf=itf, index=index, isInternal=isInternal, bindingDesc=instance.decorations.("binding-descriptors").(StaticBindingItfName(itfName=itf.name, index=index, isInternal=isInternal)), methName=methName)>
<endif>
>>

// do not redefine target server functions when target is self
AddSBCollectionTargetFunctionPrototype2(definition, instance, itf, index, isInternal, bindingDesc, methName) ::= <<
<if (bindingDesc.binding)>
<if (!(bindingDesc.binding.astDecorations.("self-binding-detected")))>
<(idl2c.methodDef)(method=method, methodName=FuncName(bindingDesc=bindingDesc, methName=methName), withThisPtr="false")>;
<endif>
<endif>
>>

FuncName(bindingDesc, methName) ::= "__component_<bindingDesc.serverComponent.definition.name; format=\"toCName\">_<bindingDesc.binding.toInterface><if (bindingDesc.binding.toInterfaceNumber)>_<bindingDesc.binding.toInterfaceNumber><endif>_<methName>"
// End StaticBindings Collection optimization

}$$
 
}
